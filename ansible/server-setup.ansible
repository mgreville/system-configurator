---
- name: configure base development server configuration
  #connection: network_cli
  connection: local
  gather_facts: true
  hosts: all
  become: true
  tasks:
#    - import_role:
#        name: suzuki-shunsuke.pyenv-module
#      tags:
#      - pyenv


    - name: print run datetime
      debug:
        msg: "running setup on host {{ ansible_facts['hostname'] }} using {{ ansible_facts['lsb']['description'] }} at {{ ansible_facts['date_time']['time'] }} on the {{ ansible_facts['date_time']['date'] }}"

# Keys
    - name: install Microsoft apt key
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        keyring: /etc/apt/trusted.gpg.d/microsoft.gpg
        state: present

# Repos
    - name: install VS Code repo
      become: yes
      apt_repository:
        repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
        filename: vscode
        state: present

# Update apt cache
    - name: update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400 #One day

# Users
    - name: add the user 'mgreville'
      user:
        name: mgreville
        state: present
        home: /home/mgreville
        comment: Marcus Greville
        shell: /bin/bash
        uid: 1000
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa

# Dotfiles
    - name: clone dot files repo
      become_user: mgreville
      git:
        repo: ssh://git@github.com/mgreville/dotfiles.git
        dest: /home/mgreville/Projects/dotfiles
      tags:
      - github
      - dotfiles

    - name: install vim vundle plugins files
      become_user: mgreville
      command: /home/mgreville/Projects/dotfiles/install-vundle+plugins.sh
      tags:
      - dotfiles

# Git config
#    - name: install git configuration
#      git:
#        repo: ssh://git@github.com/mgreville/gitconfig.git
#        dest: /home/mgreville/Projects/gitconfig
#      tags:
#      - github
#      - dotfiles

# Software
    - name: install locate
      apt: name=locate state=latest force_apt_get=yes
      tags:
      - packages

    - name: install vim
      apt: name=vim state=latest force_apt_get=yes
      tags:
      - packages

    - name: install mc
      apt: name=mc state=latest force_apt_get=yes
      tags:
      - packages

    - name: install screen
      apt: name=screen state=latest force_apt_get=yes
      tags:
      - packages

    - name: install VS Code
      apt: name=code state=latest force_apt_get=yes
      tags:
      - packages

    - name: install chrony
      apt: name=chrony state=latest force_apt_get=yes
      tags:
      - packages
 
    - name: install docker
      apt: name=docker.io state=latest force_apt_get=yes
      tags:
      - docker

# Pip packages
    - name: install Docker module for Python
      pip: executable=/usr/bin/pip3 name=docker
      tags:
      - pip
      - docker

    - name: install Python Debugger module for Python
      pip: executable=/usr/bin/pip3 name=ptvsd
      tags:
      - pip

    - name: install AWS CLI
      pip: executable=/usr/bin/pip3 name=awscli
      tags:
      - pip
      - aws

    - name: install AWS SAM CLI
      pip: executable=/usr/bin/pip3 name=aws-sam-cli
      tags:
      - pip
      - aws

# Need a condition here for docker systems which don't have systemd
# Services
    - name: ensure sshd running
      systemd: name=sshd enabled=yes state=started
      tags:
      - services
      - sshd

    - name: activate docker
      systemd: name=docker enabled=yes state=started
      tags:
      - services
      - docker

# Docker image pulls
    - name: Log into DockerHub
      docker_login:
        username: mgreville
        password: 64^y4XuyV/Ja
      tags:
      - docker

    - name: pull the alpine:latest image
      docker_image:
        name: alpine:latest
        source: pull
      tags:
      - docker

    - name: pull the ubuntu:18.04 image
      docker_image:
        name: ubuntu:18.04
        source: pull
      tags:
      - docker

    - name: install dot files
      become_user: mgreville
      command: /home/mgreville/Projects/dotfiles/install.sh
      args:
        chdir: /home/mgreville/Projects/dotfiles/
      tags:
      - dotfiles

# Configure network services

    - name: install nginx
      include_role:
        name: nginx
      tags:
        - nginx
        - packages

